<?xml version="1.0" encoding="UTF-8"?>
<project name="jcite" default="build" basedir=".">
	<description>Builds, tests, and runs the project JDepChk.</description>

	<property file="build.properties" />
	<property file="build.default.properties" />

	<property name="Name" value="JDepChk" />
	<property name="name" value="jdepchk" />

	<property name="src.dir" location="${basedir}/src" />
	<property name="src.classes.dir" location="${src.dir}/main/java" />
	<property name="src.tut.dir" location="${src.dir}/tutorial/java" />
	<property name="src.test.dir" location="${src.dir}/test/java" />
	<property name="src.test-examples.dir" location="${src.dir}/test/java-examples" />

	<!-- Targets -->

	<property name="temp.dir" location="${basedir}/temp" />
	<property name="temp.classes.dir" location="${temp.dir}/classes/main" />
	<property name="temp.tut.dir" location="${temp.dir}/classes/tutorial" />
	<property name="temp.test.dir" location="${temp.dir}/classes/test" />
	<property name="temp.test-examples.dir" location="${temp.dir}/classes/test-examples" />

	<property name="build.dir" location="${basedir}/build" />
	<property name="dist.dir" location="${basedir}/dist" />

	<property name="jar.file" location="${build.dir}/${name}.jar" />
	<property name="jar.manifest" location="${src.classes.dir}/manifest.mf" />

	<property name="run.mainclass" value="ch.parren.jdepchk.JDepChk" />
	<property name="run.args" value="" />


	<!-- ================================================================= -->
	<!-- prepare:                                                          -->
	<!-- Sets up directories and such for compilation                      -->
	<!-- ================================================================= -->

	<target name="prepare">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${temp.dir}" />
		<mkdir dir="${temp.classes.dir}" />
		<mkdir dir="${temp.tut.dir}" />
		<mkdir dir="${temp.test.dir}" />
		<mkdir dir="${temp.test-examples.dir}" />

		<path id="build.classpath">
		</path>
		<property name="build.classpath" refid="build.classpath" />
	</target>

	<target name="prepare-run" depends="prepare, jar">

		<path id="run.classpath">
			<fileset dir="${build.dir}" includes="*.jar" />
		</path>
		<property name="run.classpath" refid="run.classpath" />

		<path id="test.classpath">
			<pathelement location="${temp.test.dir}" />
			<pathelement location="${temp.tut.dir}" />
			<path refid="run.classpath" />
		</path>
		<property name="test.classpath" refid="test.classpath" />

	</target>


	<!-- ================================================================= -->
	<!-- compile:                                                          -->
	<!-- Compiles the source code                                          -->
	<!-- ================================================================= -->

	<target name="compile-main" depends="prepare" description="Compiles the source code">
		<javac srcdir="${src.classes.dir}" destdir="${temp.classes.dir}" classpath="${build.classpath}" debug="false" deprecation="on" source="${javac.source}" target="${javac.target}" includeantruntime="false">
			<include name="ch/parren/**" />
		</javac>
		<copy todir="${temp.classes.dir}">
			<fileset dir="${src.classes.dir}">
				<include name="**/*.txt" />
			</fileset>
		</copy>
	</target>

	<target name="compile" depends="prepare, compile-main" description="Compiles the source code">
	</target>

	<!-- ================================================================= -->
	<!-- jar:                                                              -->
	<!-- Creates jar file                                                  -->
	<!-- ================================================================= -->

	<target name="jar-main" depends="compile-main" description="Creates the main jar file">
		<jar manifest="${jar.manifest}" jarfile="${jar.file}" compress="false">
			<fileset dir="${temp.classes.dir}" />
		</jar>
	</target>

	<target name="jar" depends="jar-main" description="Creates the jar files">
	</target>

	<!-- ================================================================= -->
	<!-- build:                                                            -->
	<!-- The default target                                                -->
	<!-- ================================================================= -->

	<target name="build" depends="jar" description="Builds an executable target (default)">
	</target>

	<!-- ================================================================= -->
	<!-- test:                                                             -->
	<!-- Runs JUnit test suites                                            -->
	<!-- ================================================================= -->

	<target name="compile-tests" depends="prepare-run, jar">
		<mkdir dir="${temp.test.dir}" />
		<javac srcdir="${src.test.dir}" destdir="${temp.test.dir}" classpath="${test.classpath}" debug="true" deprecation="on" source="${javac.source}" target="${javac.target}" includeantruntime="false">
		</javac>
		<copy todir="${temp.test.dir}">
			<fileset dir="${src.test.dir}">
				<include name="**/*.jdep" />
			</fileset>
		</copy>
	</target>

	<target name="compile-test-examples" depends="prepare-run">
		<mkdir dir="${temp.test-examples.dir}" />
		<javac srcdir="${src.test-examples.dir}" destdir="${temp.test-examples.dir}" source="${javac.source}" target="${javac.target}" includeantruntime="false">
		</javac>
	</target>

	<target name="test" depends="prepare-run, compile-tests, compile-test-examples" description="Runs JUnit test suites">
		<taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask" classpath="${test.classpath}" />
		<junit printsummary="yes" showoutput="no" haltonerror="yes" haltonfailure="yes" fork="yes" dir="${basedir}">
			<formatter type="plain" usefile="no" />
			<classpath refid="test.classpath" />
			<batchtest>
				<fileset dir="${temp.test.dir}">
					<include name="**/*Test.class" />
					<exclude name="**/Abstract*.class" />
					<exclude name="**/*$*.class" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<!-- ================================================================= -->
	<!-- clean:                                                            -->
	<!-- Removes all temporary  files                                           -->
	<!-- ================================================================= -->

	<target name="clean" description="Removes all temporary files">
		<delete dir="${temp.dir}" />
		<delete dir="${build.dir}" />
	</target>

	<!-- ================================================================= -->
	<!-- clobber:                                                            -->
	<!-- Removes all build files                                           -->
	<!-- ================================================================= -->

	<target name="clobber" depends="clean" description="Removes all build files">
		<delete dir="${dist.dir}" />
	</target>

	<!-- ================================================================= -->
	<!-- dist:                                                             -->
	<!-- Package distribution version                                      -->
	<!-- ================================================================= -->

	<target name="check-jre1.5" description="Checks that ANT is running on JRE 1.5.">
		<condition property="is.jre15">
			<and>
				<equals arg1="Sun Microsystems Inc." arg2="${java.vendor}" />
				<contains substring="1.5.0" string="${java.runtime.version}" />
			</and>
		</condition>
		<fail message="Distributions must be built with Sun JDK 1.5.0, not ${java.runtime.name} ${java.runtime.version}. Aborting." unless="is.jre15" />
	</target>

	<target name="dist" depends="check-jre1.5, clean,test" description="Builds distribution">
		<property name="dist.name" value="${name}-${dist.version}" />
		<property name="dist.file" value="${dist.dir}/${dist.name}" />

		<property name="dist.tmp.dir" value="${dist.dir}/tmp" />
		<property name="dist.staging.dir" value="${dist.tmp.dir}/${dist.name}" />

		<!-- binary -->
		<delete dir="${dist.tmp.dir}" />
		<mkdir dir="${dist.staging.dir}" />
		<copy todir="${dist.staging.dir}">
			<fileset dir="${basedir}">
				<include name="README" />
				<include name="LICENSE" />
				<include name="build/jdepchk.jar" />
				<exclude name="**/.DS_Store" />
			</fileset>
		</copy>
		<copy todir="${dist.staging.dir}" overwrite="yes">
			<filterset>
				<filter token="dist.version" value="${dist.version}" />
				<filter token="dist.version.long" value="${dist.version.long}" />
			</filterset>
			<fileset dir="${basedir}" includes="README.html" />
		</copy>
		<tar basedir="${dist.tmp.dir}" destfile="${dist.file}-bin.tar.gz" compression="gzip" longfile="gnu" />
		<zip basedir="${dist.tmp.dir}" destfile="${dist.file}-bin.zip" filesonly="no" />

		<!-- source -->
		<delete dir="${dist.tmp.dir}" />
		<mkdir dir="${dist.staging.dir}" />
		<copy todir="${dist.staging.dir}">
			<fileset dir="${basedir}">
				<include name="README" />
				<include name="LICENSE" />
				<include name="src/**" />
				<include name="build.xml" />
				<include name="build.default.properties" />
				<include name=".project" />
				<include name=".classpath" />
				<include name=".hgignore" />
				<include name=".settings/**" />
				<exclude name="**/.DS_Store" />
			</fileset>
		</copy>
		<copy todir="${dist.staging.dir}" overwrite="yes">
			<filterset>
				<filter token="dist.version" value="${dist.version}" />
				<filter token="dist.version.long" value="${dist.version.long}" />
			</filterset>
			<fileset dir="${basedir}" includes="README.html" />
		</copy>
		<tar basedir="${dist.tmp.dir}" destfile="${dist.file}-src.tar.gz" compression="gzip" longfile="gnu" />
		<zip basedir="${dist.tmp.dir}" destfile="${dist.file}-src.zip" filesonly="no" />

		<delete dir="${dist.tmp.dir}" />
	</target>

</project>
